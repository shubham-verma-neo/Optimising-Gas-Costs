{
	"id": "3b441905137e99dbac10cb9935c9678c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/05_EIP1559.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract EIP1559{\n    /*\n    EIP 1559 is confusing!\n        - Max Base Fee\n        - Base Fee\n        - Max Fee\n        - Priority Fee\n\n        Gas price per gwei <= max_fee\n\n    The EIP 1559 has only two fees and one global variable\n        - max_priority_fee_per_gas\n        - max_fee_per_gas (max base fee in metamask)\n        - max_fee_per_gas is the most gwei per gas you are willing to pay \n        - max_priority_fee_gas is what portion of that max_per_gas you want to be a miner tip\n        - There is also a protocol-level BASEFEE \n\n    BASEFEE\n        - BASEFEE all caps is the protocol-level base fee\n        - This is visible on every block\n        - BASEFEE burned\n        - VERY ROUGHLY it is increases by 12% if the last block was full and decreases by 12% if the last\n            block was empty\n        - Exactformula is complicated -> https://eips.ethereum.org/EIPS/eip-1559\n        - Solidity ^0.8.7 block.basefee \n\n    Max Base Fee\n        - For a transaction to go through, max_fee >= BASEFEE\n        - Because  BASEFEE can fluctuate, the protocol BASEFEE might exceed the basefee you paid when\n            you signed your transaction \n        - So you don't specify a basefee, you specify how high a basefee you are willing to pay at most.\n            If the next block increases the BASEFEE because the previous block was full, you want\n            your max fee to cover this contigency.\n\n        Priority Fee\n            - max_priority_fee = max priority fee you specify in the transaction\n            - priority fee = amount miner actually receives. Also known as Miner tip\n\n            - max fee - BASEFEE = leftover\n            5 - 3 = 2 - 1.5 = 0.5\n            5 - 4 = 1 - 1.0 = 0\n            case1: max_priority_fee < letover: leftover - max_priority_fee = refund\n            case2: max_priority_fee >= leftover: refund = 0 , miner gets leftover\n            if max_priority_fee > leftover --> refund = 0\n                tx fee = BASEFEE + (max_fee - max_priority_fee)\n                tx fee = BASEFEE + miner tip\n            if max_priority_fee < leftover --> refund = 0\n                tx fee = burned fee (basefee) + max_priority_fee\n        max_priority_fee + BASEFEE < max_fee_per_gas \n\n            ----------------------------------                      -\n            |                                |                      |\n            |           Refund               |                      |\n            |                                |                      |\n            ----------------------------------      -               |max_fee_per_gas\n            |Priority Fee = max_priority_fee |      |               |\n            ----------------------------------      | gasPrice      |\n            |BASEFEE                         |      |               |\n            ----------------------------------      -               -\n\n\n        BASEFEE + max_priority_fee > max_fee_per_gas\n\n            ----------------------------------  -\n            |amount miner does not receive   |  |\n            ----------------------------------  |   max_priority_fee    -\n            |Priority fee, miner tip         |  |                       |\n            ----------------------------------  -                       |   max_fee_per_gas = gasPrice\n            |BASEFEE                         |                          |\n            ----------------------------------                          -\n\n        Example 0\n            - BASEFEE is X\n            - max_fee_per_gas = 90 \n            - max_priority_fee_per_gas = 100\n            - This is invalid because max_priority_fee_per_gas\n        Example 1\n            - BASEFREE is zero\n            - max_fee_per_gas = 3\n            - max_priority_fee_per_gas = 3\n            - you pay 3 gwei per gas\n            - The miner receives 3 gwei per gas\n            - No ether is burned\n        Example 2a\n            - BASEFREE is 70\n            - max_fee_per_gas = 90\n            - max_priority_fee_per_gas = 50\n            - 70 gwei per gas is burned\n            - 20 gwei per gas goes to the miner\n            - the miner can't receive 50 gwei per gas unless the BASEFEE had dropped to 40 \n        Example 2b\n            - BASEFREE is 70\n            - max_fee_per_gas = 90\n            - max_priority_fee_per_gas = 15\n            - 70 gwei per gas is burned\n            - 15 gwei per gas goes to the miner\n            - 5 gwei is refunded\n        Example 3\n            - BASEFEE is 90\n            - max_fee_per_gas = 90\n            - max_priority_fee_per_gas = 90\n            - Miner will probably not accept this transaction because it contains no tip\n    \n    Conclusion \n        - BASEFEE = amount burned. This is determined by the network\n        - Max Fee = most you are willing to pay fot the transaction independent of the priority fee.\n            This is upper bound of the gas price your transaction will pay\n        - Max Priority Fee = the most you are willing to give to the miner\n        - Miner Tip / Priority Tip = The amount the miner actually receives. The miner will receive less than \n            the max priority fee if max_fee - BASEFEE < max_priority_fee\n    */\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/05_EIP1559.sol": {
				"EIP1559": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/05_EIP1559.sol\":57:5213  contract EIP1559{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/05_EIP1559.sol\":57:5213  contract EIP1559{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e4f11854ac0345993fbca105afc7a20fbc85618e9e0add9b7415b065ddcebe664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203e4f11854ac0345993fbca105afc7a20fbc85618e9e0add9b7415b065ddcebe664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x4F GT DUP6 0x4A 0xC0 CALLVALUE MSIZE SWAP4 0xFB 0xCA LT GAS 0xFC PUSH27 0x20FBC85618E9E0ADD9B7415B065DDCEBE664736F6C634300080000 CALLER ",
							"sourceMap": "57:5156:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203e4f11854ac0345993fbca105afc7a20fbc85618e9e0add9b7415b065ddcebe664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x4F GT DUP6 0x4A 0xC0 CALLVALUE MSIZE SWAP4 0xFB 0xCA LT GAS 0xFC PUSH27 0x20FBC85618E9E0ADD9B7415B065DDCEBE664736F6C634300080000 CALLER ",
							"sourceMap": "57:5156:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 5213,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 5213,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e4f11854ac0345993fbca105afc7a20fbc85618e9e0add9b7415b065ddcebe664736f6c63430008000033",
									".code": [
										{
											"begin": 57,
											"end": 5213,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 5213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 5213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 5213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 5213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 5213,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/05_EIP1559.sol\":\"EIP1559\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/05_EIP1559.sol\":{\"keccak256\":\"0xb126f1d2ffe09d9e6617834346a2c6bc0623bf7b95c37db8a8f814b9f7cbadfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0359242bce0ee45d416876bb5da4f4e8d98d0e4b985f80340c15e5c69b2b4d03\",\"dweb:/ipfs/QmZC4feZKpfGxD6fwd4BNgY8ekSGwr7v2PHaRqQj3eVGBe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/05_EIP1559.sol": {
				"ast": {
					"absolutePath": "contracts/05_EIP1559.sol",
					"exportedSymbols": {
						"EIP1559": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "EIP1559",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "57:5156:0"
						}
					],
					"src": "32:5181:0"
				},
				"id": 0
			}
		}
	}
}