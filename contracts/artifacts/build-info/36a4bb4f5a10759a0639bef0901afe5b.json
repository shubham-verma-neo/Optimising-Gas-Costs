{
	"id": "36a4bb4f5a10759a0639bef0901afe5b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/17_MemoryNotClear.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract MemoryNotClear {\n    /*\n        execution cost\t8218 gas\n    */\n    function testMemoryV1() external pure {\n        uint256[1000] memory myArray;\n    }\n\n    /*\n        execution cost\t258643 gas\n    */\n    function testMemoryV2() external pure {\n        uint256[10000] memory myArray;\n    }\n\n    /*\n        execution cost\t258643 gas\n    */\n    function testMemoryV3() external pure {\n        for (uint256 i = 0; i < 10; i++) {\n            allocateMemory();\n        }\n    }\n\n    function allocateMemory() internal pure {\n        uint256[1000] memory myArray;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/17_MemoryNotClear.sol": {
				"MemoryNotClear": {
					"abi": [
						{
							"inputs": [],
							"name": "testMemoryV1",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "testMemoryV2",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "testMemoryV3",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/17_MemoryNotClear.sol\":58:630  contract MemoryNotClear {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/17_MemoryNotClear.sol\":58:630  contract MemoryNotClear {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e966d55\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6e75e726\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7edab86e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/17_MemoryNotClear.sol\":409:537  function testMemoryV3() external pure {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/17_MemoryNotClear.sol\":134:217  function testMemoryV1() external pure {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/17_MemoryNotClear.sol\":271:355  function testMemoryV2() external pure {... */\n    tag_5:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/17_MemoryNotClear.sol\":409:537  function testMemoryV3() external pure {... */\n    tag_7:\n        /* \"contracts/17_MemoryNotClear.sol\":462:471  uint256 i */\n      0x00\n        /* \"contracts/17_MemoryNotClear.sol\":457:531  for (uint256 i = 0; i < 10; i++) {... */\n    tag_13:\n        /* \"contracts/17_MemoryNotClear.sol\":481:483  10 */\n      0x0a\n        /* \"contracts/17_MemoryNotClear.sol\":477:478  i */\n      dup2\n        /* \"contracts/17_MemoryNotClear.sol\":477:483  i < 10 */\n      lt\n        /* \"contracts/17_MemoryNotClear.sol\":457:531  for (uint256 i = 0; i < 10; i++) {... */\n      iszero\n      tag_14\n      jumpi\n        /* \"contracts/17_MemoryNotClear.sol\":504:520  allocateMemory() */\n      tag_16\n        /* \"contracts/17_MemoryNotClear.sol\":504:518  allocateMemory */\n      tag_17\n        /* \"contracts/17_MemoryNotClear.sol\":504:520  allocateMemory() */\n      jump\t// in\n    tag_16:\n        /* \"contracts/17_MemoryNotClear.sol\":485:488  i++ */\n      dup1\n      dup1\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      swap2\n      pop\n      pop\n        /* \"contracts/17_MemoryNotClear.sol\":457:531  for (uint256 i = 0; i < 10; i++) {... */\n      jump(tag_13)\n    tag_14:\n      pop\n        /* \"contracts/17_MemoryNotClear.sol\":409:537  function testMemoryV3() external pure {... */\n      jump\t// out\n        /* \"contracts/17_MemoryNotClear.sol\":134:217  function testMemoryV1() external pure {... */\n    tag_9:\n        /* \"contracts/17_MemoryNotClear.sol\":182:210  uint256[1000] memory myArray */\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"contracts/17_MemoryNotClear.sol\":172:217  {... */\n      pop\n        /* \"contracts/17_MemoryNotClear.sol\":134:217  function testMemoryV1() external pure {... */\n      jump\t// out\n        /* \"contracts/17_MemoryNotClear.sol\":271:355  function testMemoryV2() external pure {... */\n    tag_11:\n        /* \"contracts/17_MemoryNotClear.sol\":319:348  uint256[10000] memory myArray */\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"contracts/17_MemoryNotClear.sol\":309:355  {... */\n      pop\n        /* \"contracts/17_MemoryNotClear.sol\":271:355  function testMemoryV2() external pure {... */\n      jump\t// out\n        /* \"contracts/17_MemoryNotClear.sol\":543:628  function allocateMemory() internal pure {... */\n    tag_17:\n        /* \"contracts/17_MemoryNotClear.sol\":593:621  uint256[1000] memory myArray */\n      tag_27\n      tag_22\n      jump\t// in\n    tag_27:\n        /* \"contracts/17_MemoryNotClear.sol\":583:628  {... */\n      pop\n        /* \"contracts/17_MemoryNotClear.sol\":543:628  function allocateMemory() internal pure {... */\n      jump\t// out\n    tag_22:\n      mload(0x40)\n      dup1\n      0x7d00\n      add\n      0x40\n      mstore\n      dup1\n      0x03e8\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_25:\n      mload(0x40)\n      dup1\n      0x04e200\n      add\n      0x40\n      mstore\n      dup1\n      0x2710\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_28:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x11\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:270   */\n    tag_29:\n        /* \"#utility.yul\":230:237   */\n      0x00\n        /* \"#utility.yul\":259:264   */\n      dup2\n        /* \"#utility.yul\":248:264   */\n      swap1\n      pop\n        /* \"#utility.yul\":193:270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":276:509   */\n    tag_19:\n        /* \"#utility.yul\":315:318   */\n      0x00\n        /* \"#utility.yul\":338:362   */\n      tag_34\n        /* \"#utility.yul\":356:361   */\n      dup3\n        /* \"#utility.yul\":338:362   */\n      tag_29\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":329:362   */\n      swap2\n      pop\n        /* \"#utility.yul\":384:450   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":377:382   */\n      dup3\n        /* \"#utility.yul\":374:451   */\n      sub\n        /* \"#utility.yul\":371:474   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":454:472   */\n      tag_36\n      tag_28\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":371:474   */\n    tag_35:\n        /* \"#utility.yul\":501:502   */\n      0x01\n        /* \"#utility.yul\":494:499   */\n      dup3\n        /* \"#utility.yul\":490:503   */\n      add\n        /* \"#utility.yul\":483:503   */\n      swap1\n      pop\n        /* \"#utility.yul\":276:509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c691e8a4c5cd2ed4064d98d5bdaff4d133488b2282c3e18a558c693c6bb99d8464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506101a78061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80632e966d55146100435780636e75e7261461004d5780637edab86e14610057575b5f80fd5b61004b610061565b005b61005561008a565b005b61005f610095565b005b5f5b600a811015610087576100746100a0565b808061007f9061012a565b915050610063565b50565b6100926100ab565b50565b61009d6100cf565b50565b6100a86100ab565b50565b60405180617d0001604052806103e890602082028036833780820191505090505090565b604051806204e200016040528061271090602082028036833780820191505090505090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f819050919050565b5f61013482610121565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610166576101656100f4565b5b60018201905091905056fea2646970667358221220c691e8a4c5cd2ed4064d98d5bdaff4d133488b2282c3e18a558c693c6bb99d8464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E966D55 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x6E75E726 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x7EDAB86E EQ PUSH2 0x57 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH2 0x74 PUSH2 0xA0 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7F SWAP1 PUSH2 0x12A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x63 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x92 PUSH2 0xAB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9D PUSH2 0xCF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA8 PUSH2 0xAB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x7D00 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3E8 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH3 0x4E200 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2710 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x134 DUP3 PUSH2 0x121 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x166 JUMPI PUSH2 0x165 PUSH2 0xF4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 SWAP2 0xE8 LOG4 0xC5 0xCD 0x2E 0xD4 MOD 0x4D SWAP9 0xD5 0xBD 0xAF DELEGATECALL 0xD1 CALLER BASEFEE DUP12 0x22 DUP3 0xC3 0xE1 DUP11 SSTORE DUP13 PUSH10 0x3C6BB99D8464736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "58:572:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allocateMemory_53": {
									"entryPoint": 160,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@testMemoryV1_12": {
									"entryPoint": 138,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@testMemoryV2_23": {
									"entryPoint": 149,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@testMemoryV3_42": {
									"entryPoint": 97,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:512:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "238:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "248:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "259:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "248:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "220:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "230:7:1",
														"type": ""
													}
												],
												"src": "193:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "319:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "329:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "356:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "338:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "329:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "452:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "454:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "454:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "454:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "377:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "384:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "374:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "374:77:1"
															},
															"nodeType": "YulIf",
															"src": "371:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "483:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "494:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "501:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "490:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "305:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "315:3:1",
														"type": ""
													}
												],
												"src": "276:233:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80632e966d55146100435780636e75e7261461004d5780637edab86e14610057575b5f80fd5b61004b610061565b005b61005561008a565b005b61005f610095565b005b5f5b600a811015610087576100746100a0565b808061007f9061012a565b915050610063565b50565b6100926100ab565b50565b61009d6100cf565b50565b6100a86100ab565b50565b60405180617d0001604052806103e890602082028036833780820191505090505090565b604051806204e200016040528061271090602082028036833780820191505090505090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f819050919050565b5f61013482610121565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610166576101656100f4565b5b60018201905091905056fea2646970667358221220c691e8a4c5cd2ed4064d98d5bdaff4d133488b2282c3e18a558c693c6bb99d8464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E966D55 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x6E75E726 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x7EDAB86E EQ PUSH2 0x57 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH2 0x74 PUSH2 0xA0 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7F SWAP1 PUSH2 0x12A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x63 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x92 PUSH2 0xAB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9D PUSH2 0xCF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA8 PUSH2 0xAB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x7D00 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3E8 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH3 0x4E200 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2710 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x134 DUP3 PUSH2 0x121 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x166 JUMPI PUSH2 0x165 PUSH2 0xF4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 SWAP2 0xE8 LOG4 0xC5 0xCD 0x2E 0xD4 MOD 0x4D SWAP9 0xD5 0xBD 0xAF DELEGATECALL 0xD1 CALLER BASEFEE DUP12 0x22 DUP3 0xC3 0xE1 DUP11 SSTORE DUP13 PUSH10 0x3C6BB99D8464736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "58:572:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:128;;;:::i;:::-;;134:83;;;:::i;:::-;;271:84;;;:::i;:::-;;409:128;462:9;457:74;481:2;477:1;:6;457:74;;;504:16;:14;:16::i;:::-;485:3;;;;;:::i;:::-;;;;457:74;;;;409:128::o;134:83::-;182:28;;:::i;:::-;172:45;134:83::o;271:84::-;319:29;;:::i;:::-;309:46;271:84::o;543:85::-;593:28;;:::i;:::-;583:45;543:85::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:77;230:7;259:5;248:16;;193:77;;;:::o;276:233::-;315:3;338:24;356:5;338:24;:::i;:::-;329:33;;384:66;377:5;374:77;371:103;;454:18;;:::i;:::-;371:103;501:1;494:5;490:13;483:20;;276:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "84600",
								"executionCost": "133",
								"totalCost": "84733"
							},
							"external": {
								"testMemoryV1()": "8218",
								"testMemoryV2()": "255740",
								"testMemoryV3()": "infinite"
							},
							"internal": {
								"allocateMemory()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 630,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 630,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c691e8a4c5cd2ed4064d98d5bdaff4d133488b2282c3e18a558c693c6bb99d8464736f6c63430008140033",
									".code": [
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "2E966D55"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "6E75E726"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "7EDAB86E"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 630,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 409,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 409,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 409,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 409,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 409,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 537,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 217,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 134,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 134,
											"end": 217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 217,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 134,
											"end": 217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 217,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 271,
											"end": 355,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 271,
											"end": 355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 271,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 271,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 271,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 271,
											"end": 355,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 271,
											"end": 355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 271,
											"end": 355,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 409,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 457,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 477,
											"end": 483,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 457,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 457,
											"end": 531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 504,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 504,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 504,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 520,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 504,
											"end": 520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 485,
											"end": 488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 485,
											"end": 488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 485,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 485,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 485,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 485,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 485,
											"end": 488,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 485,
											"end": 488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 485,
											"end": 488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 485,
											"end": 488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 485,
											"end": 488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 457,
											"end": 531,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 531,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 457,
											"end": 531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 217,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 134,
											"end": 217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 182,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 182,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 210,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 182,
											"end": 210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 172,
											"end": 217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 271,
											"end": 355,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 271,
											"end": 355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 319,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 319,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 319,
											"end": 348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 319,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 309,
											"end": 355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 271,
											"end": 355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 543,
											"end": 628,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 543,
											"end": 628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 593,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 593,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 593,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 593,
											"end": 621,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 593,
											"end": 621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 583,
											"end": 628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 543,
											"end": 628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E200"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2710"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 193,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 230,
											"end": 237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 248,
											"end": 264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 248,
											"end": 264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 276,
											"end": 509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 315,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 356,
											"end": 361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 338,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 362,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 329,
											"end": 362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 329,
											"end": 362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 384,
											"end": 450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 377,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 374,
											"end": 451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 371,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 371,
											"end": 474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 454,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 454,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 454,
											"end": 472,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 474,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 371,
											"end": 474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 490,
											"end": 503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 483,
											"end": 503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 483,
											"end": 503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/17_MemoryNotClear.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"testMemoryV1()": "6e75e726",
							"testMemoryV2()": "7edab86e",
							"testMemoryV3()": "2e966d55"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"testMemoryV1\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMemoryV2\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMemoryV3\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/17_MemoryNotClear.sol\":\"MemoryNotClear\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/17_MemoryNotClear.sol\":{\"keccak256\":\"0xb9cf4048128a661b3e4f26e38589074e46e4cf5f58bfab6a68940f8cb31769c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ecb6b65f3b7b43a6241edad9d5382797b3403bfed99788689c0e7138e94aa9\",\"dweb:/ipfs/QmQ9vSVhBzEm2DcqgxfxFVFfPinLgRPUopVWtUhP6CSgT8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n --> contracts/17_MemoryNotClear.sol:9:9:\n  |\n9 |         uint256[1000] memory myArray;\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 210,
					"file": "contracts/17_MemoryNotClear.sol",
					"start": 182
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/17_MemoryNotClear.sol:16:9:\n   |\n16 |         uint256[10000] memory myArray;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 348,
					"file": "contracts/17_MemoryNotClear.sol",
					"start": 319
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/17_MemoryNotClear.sol:29:9:\n   |\n29 |         uint256[1000] memory myArray;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 621,
					"file": "contracts/17_MemoryNotClear.sol",
					"start": 593
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/17_MemoryNotClear.sol": {
				"ast": {
					"absolutePath": "contracts/17_MemoryNotClear.sol",
					"exportedSymbols": {
						"MemoryNotClear": [
							54
						]
					},
					"id": 55,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MemoryNotClear",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 54,
							"linearizedBaseContracts": [
								54
							],
							"name": "MemoryNotClear",
							"nameLocation": "67:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "172:45:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "myArray",
														"nameLocation": "203:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 11,
														"src": "182:28:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$1000_memory_ptr",
															"typeString": "uint256[1000]"
														},
														"typeName": {
															"baseType": {
																"id": 7,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "182:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 8,
															"length": {
																"hexValue": "31303030",
																"id": 6,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "190:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "ArrayTypeName",
															"src": "182:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$1000_storage_ptr",
																"typeString": "uint256[1000]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 10,
												"nodeType": "VariableDeclarationStatement",
												"src": "182:28:0"
											}
										]
									},
									"functionSelector": "6e75e726",
									"id": 12,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testMemoryV1",
									"nameLocation": "143:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:0:0"
									},
									"scope": 54,
									"src": "134:83:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "309:46:0",
										"statements": [
											{
												"assignments": [
													20
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"mutability": "mutable",
														"name": "myArray",
														"nameLocation": "341:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 22,
														"src": "319:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$10000_memory_ptr",
															"typeString": "uint256[10000]"
														},
														"typeName": {
															"baseType": {
																"id": 18,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 19,
															"length": {
																"hexValue": "3130303030",
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "327:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "ArrayTypeName",
															"src": "319:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$10000_storage_ptr",
																"typeString": "uint256[10000]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"nodeType": "VariableDeclarationStatement",
												"src": "319:29:0"
											}
										]
									},
									"functionSelector": "7edab86e",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testMemoryV2",
									"nameLocation": "280:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:0:0"
									},
									"scope": 54,
									"src": "271:84:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "447:90:0",
										"statements": [
											{
												"body": {
													"id": 39,
													"nodeType": "Block",
													"src": "490:41:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "allocateMemory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "504:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "504:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 38,
															"nodeType": "ExpressionStatement",
															"src": "504:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "481:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "477:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 40,
												"initializationExpression": {
													"assignments": [
														27
													],
													"declarations": [
														{
															"constant": false,
															"id": 27,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "470:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 40,
															"src": "462:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 26,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "462:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 29,
													"initialValue": {
														"hexValue": "30",
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "474:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "462:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "485:3:0",
														"subExpression": {
															"id": 33,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "485:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 35,
													"nodeType": "ExpressionStatement",
													"src": "485:3:0"
												},
												"nodeType": "ForStatement",
												"src": "457:74:0"
											}
										]
									},
									"functionSelector": "2e966d55",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testMemoryV3",
									"nameLocation": "418:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "430:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:0"
									},
									"scope": 54,
									"src": "409:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "583:45:0",
										"statements": [
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "myArray",
														"nameLocation": "614:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "593:28:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$1000_memory_ptr",
															"typeString": "uint256[1000]"
														},
														"typeName": {
															"baseType": {
																"id": 48,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "593:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 49,
															"length": {
																"hexValue": "31303030",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "601:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "ArrayTypeName",
															"src": "593:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$1000_storage_ptr",
																"typeString": "uint256[1000]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"nodeType": "VariableDeclarationStatement",
												"src": "593:28:0"
											}
										]
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allocateMemory",
									"nameLocation": "552:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:0"
									},
									"scope": 54,
									"src": "543:85:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 55,
							"src": "58:572:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:599:0"
				},
				"id": 0
			}
		}
	}
}