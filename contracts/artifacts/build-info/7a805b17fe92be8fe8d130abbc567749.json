{
	"id": "7a805b17fe92be8fe8d130abbc567749",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/01_Simple.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ncontract Simple{\n    uint256 private x = 10;\n\n    /* execution cost\t2351 gas */\n    function light()external  view returns(uint256){\n        return x + 1;\n    }\n\n    /* execution cost\t20650 gas */\n    function heavy50Loops()external view returns(uint256){\n        bytes32 _x = keccak256(abi.encodePacked(x));\n        for(uint256 i = 0; i < 50; i++){\n            _x = keccak256(abi.encodePacked(x));\n        }\n        return uint256(_x);\n    }\n\n    /* execution cost\t11581 gas */\n    function heavy25Loops()external view returns(uint256){\n        bytes32 _x = keccak256(abi.encodePacked(x));\n        for(uint256 i = 0; i < 25; i++){\n            _x = keccak256(abi.encodePacked(x));\n        }\n        return uint256(_x);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/01_Simple.sol": {
				"Simple": {
					"abi": [
						{
							"inputs": [],
							"name": "heavy25Loops",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "heavy50Loops",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "light",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/01_Simple.sol\":56:782  contract Simple{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/01_Simple.sol\":97:99  10 */\n  0x0a\n    /* \"contracts/01_Simple.sol\":77:99  uint256 private x = 10 */\n  0x00\n  sstore\n    /* \"contracts/01_Simple.sol\":56:782  contract Simple{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/01_Simple.sol\":56:782  contract Simple{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64dbe78c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6fc21849\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa111fb4d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/01_Simple.sol\":140:216  function light()external  view returns(uint256){... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":347:372   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":335:337   */\n      0x20\n        /* \"#utility.yul\":320:338   */\n      add\n        /* \"contracts/01_Simple.sol\":140:216  function light()external  view returns(uint256){... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_Simple.sol\":257:498  function heavy50Loops()external view returns(uint256){... */\n    tag_4:\n      tag_6\n      tag_11\n      jump\t// in\n        /* \"contracts/01_Simple.sol\":539:780  function heavy25Loops()external view returns(uint256){... */\n    tag_5:\n      tag_6\n      tag_14\n      jump\t// in\n        /* \"contracts/01_Simple.sol\":140:216  function light()external  view returns(uint256){... */\n    tag_7:\n        /* \"contracts/01_Simple.sol\":179:186  uint256 */\n      0x00\n        /* \"contracts/01_Simple.sol\":204:205  x */\n      dup1\n      sload\n        /* \"contracts/01_Simple.sol\":204:209  x + 1 */\n      tag_17\n      swap1\n        /* \"contracts/01_Simple.sol\":208:209  1 */\n      0x01\n        /* \"contracts/01_Simple.sol\":204:209  x + 1 */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"contracts/01_Simple.sol\":197:209  return x + 1 */\n      swap1\n      pop\n        /* \"contracts/01_Simple.sol\":140:216  function light()external  view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/01_Simple.sol\":257:498  function heavy50Loops()external view returns(uint256){... */\n    tag_11:\n        /* \"contracts/01_Simple.sol\":302:309  uint256 */\n      0x00\n        /* \"contracts/01_Simple.sol\":320:330  bytes32 _x */\n      dup1\n        /* \"contracts/01_Simple.sol\":360:361  x */\n      sload(0x00)\n        /* \"contracts/01_Simple.sol\":343:362  abi.encodePacked(x) */\n      add(0x20, mload(0x40))\n      tag_20\n      swap2\n        /* \"#utility.yul\":143:162   */\n      dup2\n      mstore\n        /* \"#utility.yul\":187:189   */\n      0x20\n        /* \"#utility.yul\":178:190   */\n      add\n      swap1\n        /* \"#utility.yul\":14:196   */\n      jump\n        /* \"contracts/01_Simple.sol\":343:362  abi.encodePacked(x) */\n    tag_20:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/01_Simple.sol\":333:363  keccak256(abi.encodePacked(x)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/01_Simple.sol\":320:363  bytes32 _x = keccak256(abi.encodePacked(x)) */\n      swap1\n      pop\n        /* \"contracts/01_Simple.sol\":377:386  uint256 i */\n      0x00\n        /* \"contracts/01_Simple.sol\":373:464  for(uint256 i = 0; i < 50; i++){... */\n    tag_22:\n        /* \"contracts/01_Simple.sol\":396:398  50 */\n      0x32\n        /* \"contracts/01_Simple.sol\":392:393  i */\n      dup2\n        /* \"contracts/01_Simple.sol\":392:398  i < 50 */\n      lt\n        /* \"contracts/01_Simple.sol\":373:464  for(uint256 i = 0; i < 50; i++){... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/01_Simple.sol\":450:451  x */\n      sload(0x00)\n        /* \"contracts/01_Simple.sol\":433:452  abi.encodePacked(x) */\n      add(0x20, mload(0x40))\n      tag_25\n      swap2\n        /* \"#utility.yul\":143:162   */\n      dup2\n      mstore\n        /* \"#utility.yul\":187:189   */\n      0x20\n        /* \"#utility.yul\":178:190   */\n      add\n      swap1\n        /* \"#utility.yul\":14:196   */\n      jump\n        /* \"contracts/01_Simple.sol\":433:452  abi.encodePacked(x) */\n    tag_25:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/01_Simple.sol\":423:453  keccak256(abi.encodePacked(x)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/01_Simple.sol\":418:453  _x = keccak256(abi.encodePacked(x)) */\n      swap2\n      pop\n        /* \"contracts/01_Simple.sol\":400:403  i++ */\n      dup1\n      dup1\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      swap2\n      pop\n      pop\n        /* \"contracts/01_Simple.sol\":373:464  for(uint256 i = 0; i < 50; i++){... */\n      jump(tag_22)\n    tag_23:\n      pop\n        /* \"contracts/01_Simple.sol\":488:490  _x */\n      swap2\n        /* \"contracts/01_Simple.sol\":257:498  function heavy50Loops()external view returns(uint256){... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/01_Simple.sol\":539:780  function heavy25Loops()external view returns(uint256){... */\n    tag_14:\n        /* \"contracts/01_Simple.sol\":584:591  uint256 */\n      0x00\n        /* \"contracts/01_Simple.sol\":602:612  bytes32 _x */\n      dup1\n        /* \"contracts/01_Simple.sol\":642:643  x */\n      sload(0x00)\n        /* \"contracts/01_Simple.sol\":625:644  abi.encodePacked(x) */\n      add(0x20, mload(0x40))\n      tag_29\n      swap2\n        /* \"#utility.yul\":143:162   */\n      dup2\n      mstore\n        /* \"#utility.yul\":187:189   */\n      0x20\n        /* \"#utility.yul\":178:190   */\n      add\n      swap1\n        /* \"#utility.yul\":14:196   */\n      jump\n        /* \"contracts/01_Simple.sol\":625:644  abi.encodePacked(x) */\n    tag_29:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/01_Simple.sol\":615:645  keccak256(abi.encodePacked(x)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/01_Simple.sol\":602:645  bytes32 _x = keccak256(abi.encodePacked(x)) */\n      swap1\n      pop\n        /* \"contracts/01_Simple.sol\":659:668  uint256 i */\n      0x00\n        /* \"contracts/01_Simple.sol\":655:746  for(uint256 i = 0; i < 25; i++){... */\n    tag_30:\n        /* \"contracts/01_Simple.sol\":678:680  25 */\n      0x19\n        /* \"contracts/01_Simple.sol\":674:675  i */\n      dup2\n        /* \"contracts/01_Simple.sol\":674:680  i < 25 */\n      lt\n        /* \"contracts/01_Simple.sol\":655:746  for(uint256 i = 0; i < 25; i++){... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/01_Simple.sol\":732:733  x */\n      sload(0x00)\n        /* \"contracts/01_Simple.sol\":715:734  abi.encodePacked(x) */\n      add(0x20, mload(0x40))\n      tag_33\n      swap2\n        /* \"#utility.yul\":143:162   */\n      dup2\n      mstore\n        /* \"#utility.yul\":187:189   */\n      0x20\n        /* \"#utility.yul\":178:190   */\n      add\n      swap1\n        /* \"#utility.yul\":14:196   */\n      jump\n        /* \"contracts/01_Simple.sol\":715:734  abi.encodePacked(x) */\n    tag_33:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/01_Simple.sol\":705:735  keccak256(abi.encodePacked(x)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/01_Simple.sol\":700:735  _x = keccak256(abi.encodePacked(x)) */\n      swap2\n      pop\n        /* \"contracts/01_Simple.sol\":682:685  i++ */\n      dup1\n      dup1\n      tag_34\n      swap1\n      tag_27\n      jump\t// in\n    tag_34:\n      swap2\n      pop\n      pop\n        /* \"contracts/01_Simple.sol\":655:746  for(uint256 i = 0; i < 25; i++){... */\n      jump(tag_30)\n        /* \"#utility.yul\":383:511   */\n    tag_18:\n        /* \"#utility.yul\":423:426   */\n      0x00\n        /* \"#utility.yul\":454:455   */\n      dup3\n        /* \"#utility.yul\":450:456   */\n      not\n        /* \"#utility.yul\":447:448   */\n      dup3\n        /* \"#utility.yul\":444:457   */\n      gt\n        /* \"#utility.yul\":441:480   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":460:478   */\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      pop\n        /* \"#utility.yul\":496:505   */\n      add\n      swap1\n        /* \"#utility.yul\":383:511   */\n      jump\t// out\n        /* \"#utility.yul\":516:651   */\n    tag_27:\n        /* \"#utility.yul\":555:558   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":576:593   */\n      dup3\n      eq\n        /* \"#utility.yul\":573:616   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":596:614   */\n      tag_44\n      tag_41\n      jump\t// in\n    tag_44:\n      pop\n        /* \"#utility.yul\":643:644   */\n      0x01\n        /* \"#utility.yul\":632:645   */\n      add\n      swap1\n        /* \"#utility.yul\":516:651   */\n      jump\t// out\n        /* \"#utility.yul\":656:783   */\n    tag_41:\n        /* \"#utility.yul\":717:727   */\n      0x4e487b71\n        /* \"#utility.yul\":712:715   */\n      0xe0\n        /* \"#utility.yul\":708:728   */\n      shl\n        /* \"#utility.yul\":705:706   */\n      0x00\n        /* \"#utility.yul\":698:729   */\n      mstore\n        /* \"#utility.yul\":748:752   */\n      0x11\n        /* \"#utility.yul\":745:746   */\n      0x04\n        /* \"#utility.yul\":738:753   */\n      mstore\n        /* \"#utility.yul\":772:776   */\n      0x24\n        /* \"#utility.yul\":769:770   */\n      0x00\n        /* \"#utility.yul\":762:777   */\n      revert\n\n    auxdata: 0xa2646970667358221220845b0255496fca6c74ae125f2b4f68cbdcb1d51d905d6f42d5bb437a1b79e20a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600a60005534801561001557600080fd5b50610201806100256000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806364dbe78c146100465780636fc2184914610060578063a111fb4d14610068575b600080fd5b61004e610070565b60405190815260200160405180910390f35b61004e610084565b61004e610106565b6000805461007f906001610182565b905090565b60008060005460405160200161009c91815260200190565b60405160208183030381529060405280519060200120905060005b6032811015610100576000546040516020016100d591815260200190565b60405160208183030381529060405280519060200120915080806100f89061019a565b9150506100b7565b50919050565b60008060005460405160200161011e91815260200190565b60405160208183030381529060405280519060200120905060005b60198110156101005760005460405160200161015791815260200190565b604051602081830303815290604052805190602001209150808061017a9061019a565b915050610139565b60008219821115610195576101956101b5565b500190565b60006000198214156101ae576101ae6101b5565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220845b0255496fca6c74ae125f2b4f68cbdcb1d51d905d6f42d5bb437a1b79e20a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64DBE78C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6FC21849 EQ PUSH2 0x60 JUMPI DUP1 PUSH4 0xA111FB4D EQ PUSH2 0x68 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x70 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x84 JUMP JUMPDEST PUSH2 0x4E PUSH2 0x106 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x7F SWAP1 PUSH1 0x1 PUSH2 0x182 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x32 DUP2 LT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP DUP1 DUP1 PUSH2 0xF8 SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB7 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x19 DUP2 LT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x157 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP DUP1 DUP1 PUSH2 0x17A SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x139 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x195 JUMPI PUSH2 0x195 PUSH2 0x1B5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1AE JUMPI PUSH2 0x1AE PUSH2 0x1B5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 JUMPDEST MUL SSTORE 0x49 PUSH16 0xCA6C74AE125F2B4F68CBDCB1D51D905D PUSH16 0x42D5BB437A1B79E20A64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:726:0:-:0;;;97:2;77:22;;56:726;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@heavy25Loops_96": {
									"entryPoint": 262,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@heavy50Loops_55": {
									"entryPoint": 132,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@light_14": {
									"entryPoint": 112,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:785:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "133:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "150:3:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "155:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "143:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "143:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "143:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "171:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "182:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "187:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "178:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "171:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "109:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "114:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "125:3:1",
														"type": ""
													}
												],
												"src": "14:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "302:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "312:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "324:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "335:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "320:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "320:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "312:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "354:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "365:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "347:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "271:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "282:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "293:4:1",
														"type": ""
													}
												],
												"src": "201:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "431:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "458:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "460:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "460:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "460:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "447:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "454:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "444:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:13:1"
															},
															"nodeType": "YulIf",
															"src": "441:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "489:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "500:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "503:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "496:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "414:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "417:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "423:3:1",
														"type": ""
													}
												],
												"src": "383:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "563:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "594:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "596:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "596:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "596:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "579:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "590:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "586:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "576:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "576:17:1"
															},
															"nodeType": "YulIf",
															"src": "573:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "625:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "636:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "643:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "632:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "625:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "545:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "555:3:1",
														"type": ""
													}
												],
												"src": "516:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "688:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "705:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "712:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "717:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "708:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "698:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "698:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "745:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "748:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "738:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "738:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "738:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "769:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "772:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "762:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "656:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806364dbe78c146100465780636fc2184914610060578063a111fb4d14610068575b600080fd5b61004e610070565b60405190815260200160405180910390f35b61004e610084565b61004e610106565b6000805461007f906001610182565b905090565b60008060005460405160200161009c91815260200190565b60405160208183030381529060405280519060200120905060005b6032811015610100576000546040516020016100d591815260200190565b60405160208183030381529060405280519060200120915080806100f89061019a565b9150506100b7565b50919050565b60008060005460405160200161011e91815260200190565b60405160208183030381529060405280519060200120905060005b60198110156101005760005460405160200161015791815260200190565b604051602081830303815290604052805190602001209150808061017a9061019a565b915050610139565b60008219821115610195576101956101b5565b500190565b60006000198214156101ae576101ae6101b5565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220845b0255496fca6c74ae125f2b4f68cbdcb1d51d905d6f42d5bb437a1b79e20a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64DBE78C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6FC21849 EQ PUSH2 0x60 JUMPI DUP1 PUSH4 0xA111FB4D EQ PUSH2 0x68 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x70 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x84 JUMP JUMPDEST PUSH2 0x4E PUSH2 0x106 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x7F SWAP1 PUSH1 0x1 PUSH2 0x182 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x32 DUP2 LT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP DUP1 DUP1 PUSH2 0xF8 SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB7 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x19 DUP2 LT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x157 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP DUP1 DUP1 PUSH2 0x17A SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x139 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x195 JUMPI PUSH2 0x195 PUSH2 0x1B5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1AE JUMPI PUSH2 0x1AE PUSH2 0x1B5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 JUMPDEST MUL SSTORE 0x49 PUSH16 0xCA6C74AE125F2B4F68CBDCB1D51D905D PUSH16 0x42D5BB437A1B79E20A64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:726:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;140:76;;;:::i;:::-;;;347:25:1;;;335:2;320:18;140:76:0;;;;;;;257:241;;;:::i;539:::-;;;:::i;140:76::-;179:7;204:1;;:5;;208:1;204:5;:::i;:::-;197:12;;140:76;:::o;257:241::-;302:7;320:10;360:1;;343:19;;;;;;143::1;;187:2;178:12;;14:182;343:19:0;;;;;;;;;;;;;333:30;;;;;;320:43;;377:9;373:91;396:2;392:1;:6;373:91;;;450:1;;433:19;;;;;;143::1;;187:2;178:12;;14:182;433:19:0;;;;;;;;;;;;;423:30;;;;;;418:35;;400:3;;;;;:::i;:::-;;;;373:91;;;-1:-1:-1;488:2:0;257:241;-1:-1:-1;257:241:0:o;539:::-;584:7;602:10;642:1;;625:19;;;;;;143::1;;187:2;178:12;;14:182;625:19:0;;;;;;;;;;;;;615:30;;;;;;602:43;;659:9;655:91;678:2;674:1;:6;655:91;;;732:1;;715:19;;;;;;143::1;;187:2;178:12;;14:182;715:19:0;;;;;;;;;;;;;705:30;;;;;;700:35;;682:3;;;;;:::i;:::-;;;;655:91;;383:128:1;423:3;454:1;450:6;447:1;444:13;441:39;;;460:18;;:::i;:::-;-1:-1:-1;496:9:1;;383:128::o;516:135::-;555:3;-1:-1:-1;;576:17:1;;573:43;;;596:18;;:::i;:::-;-1:-1:-1;643:1:1;632:13;;516:135::o;656:127::-;717:10;712:3;708:20;705:1;698:31;748:4;745:1;738:15;772:4;769:1;762:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "102600",
								"executionCost": "22259",
								"totalCost": "124859"
							},
							"external": {
								"heavy25Loops()": "infinite",
								"heavy50Loops()": "infinite",
								"light()": "2351"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 782,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 782,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 97,
									"end": 99,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 77,
									"end": 99,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220845b0255496fca6c74ae125f2b4f68cbdcb1d51d905d6f42d5bb437a1b79e20a64736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "64DBE78C"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "6FC21849"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "A111FB4D"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 782,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 140,
											"end": 216,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 140,
											"end": 216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 140,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 140,
											"end": 216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 216,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 140,
											"end": 216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 347,
											"end": 372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 335,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 320,
											"end": 338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 140,
											"end": 216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 140,
											"end": 216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 140,
											"end": 216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 216,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 257,
											"end": 498,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 257,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 257,
											"end": 498,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 539,
											"end": 780,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 539,
											"end": 780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 539,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 539,
											"end": 780,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 216,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 140,
											"end": 216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 204,
											"end": 205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 204,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 204,
											"end": 209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 204,
											"end": 209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 204,
											"end": 209,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 204,
											"end": 209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 197,
											"end": 209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 140,
											"end": 216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 216,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 257,
											"end": 498,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 257,
											"end": 498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 302,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 143,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 143,
											"end": 162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 187,
											"end": 189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 196,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 343,
											"end": 362,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 333,
											"end": 363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 363,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 320,
											"end": 363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 320,
											"end": 363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 377,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 373,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 392,
											"end": 393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 392,
											"end": 398,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 373,
											"end": 464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 373,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 450,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 143,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 143,
											"end": 162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 187,
											"end": 189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 196,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 433,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 423,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 423,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 423,
											"end": 453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 418,
											"end": 453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 400,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 400,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 400,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 400,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 400,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 400,
											"end": 403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 400,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 400,
											"end": 403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 400,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 400,
											"end": 403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 373,
											"end": 464,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 488,
											"end": 490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 257,
											"end": 498,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 539,
											"end": 780,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 539,
											"end": 780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 642,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 643,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 625,
											"end": 644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 625,
											"end": 644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 143,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 143,
											"end": 162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 187,
											"end": 189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 196,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 625,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 625,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 625,
											"end": 644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 625,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 602,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 746,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 655,
											"end": 746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 678,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 674,
											"end": 675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 674,
											"end": 680,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 655,
											"end": 746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 655,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 655,
											"end": 746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 733,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 715,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 143,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 143,
											"end": 162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 187,
											"end": 189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 196,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 715,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 715,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 705,
											"end": 735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 705,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 705,
											"end": 735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 700,
											"end": 735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 682,
											"end": 685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 682,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 682,
											"end": 685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 682,
											"end": 685,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 682,
											"end": 685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 682,
											"end": 685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 682,
											"end": 685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 682,
											"end": 685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 655,
											"end": 746,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 383,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 423,
											"end": 426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 450,
											"end": 456,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 447,
											"end": 448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 444,
											"end": 457,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 441,
											"end": 480,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 441,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 460,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 460,
											"end": 478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 496,
											"end": 505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 496,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 511,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 516,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 516,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 576,
											"end": 593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 576,
											"end": 593,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 573,
											"end": 616,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 573,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 573,
											"end": 616,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 596,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 596,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 596,
											"end": 614,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 596,
											"end": 614,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 596,
											"end": 614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 643,
											"end": 644,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 632,
											"end": 645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 632,
											"end": 645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 656,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 717,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 712,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 705,
											"end": 706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 729,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 748,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 745,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 738,
											"end": 753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 772,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 777,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"heavy25Loops()": "a111fb4d",
							"heavy50Loops()": "6fc21849",
							"light()": "64dbe78c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"heavy25Loops\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"heavy50Loops\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"light\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/01_Simple.sol\":\"Simple\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/01_Simple.sol\":{\"keccak256\":\"0x908230db9ff56e9185a9af69764040ae76f922d2335dadaf1cbcb3d89c02f549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://937755a017d766fc9f51257f739aa3aa1a08a082c99f803ba57ab746a01f526e\",\"dweb:/ipfs/QmP45fHcattobTW78XTSGyx1YW3BSn8FPxbrDHS6r4dcRt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/01_Simple.sol:Simple",
								"label": "x",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/01_Simple.sol": {
				"ast": {
					"absolutePath": "contracts/01_Simple.sol",
					"exportedSymbols": {
						"Simple": [
							97
						]
					},
					"id": 98,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 97,
							"linearizedBaseContracts": [
								97
							],
							"name": "Simple",
							"nameLocation": "65:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "x",
									"nameLocation": "93:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 97,
									"src": "77:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "77:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "97:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "187:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 9,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "204:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "208:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "204:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 8,
												"id": 12,
												"nodeType": "Return",
												"src": "197:12:0"
											}
										]
									},
									"functionSelector": "64dbe78c",
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "light",
									"nameLocation": "149:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "154:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "179:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "178:9:0"
									},
									"scope": 97,
									"src": "140:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "310:188:0",
										"statements": [
											{
												"assignments": [
													20
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"mutability": "mutable",
														"name": "_x",
														"nameLocation": "328:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 54,
														"src": "320:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 19,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "320:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 27,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 24,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "360:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 22,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "343:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "343:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "343:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 21,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "333:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "333:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "320:43:0"
											},
											{
												"body": {
													"id": 47,
													"nodeType": "Block",
													"src": "404:60:0",
													"statements": [
														{
															"expression": {
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 38,
																	"name": "_x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "418:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 42,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4,
																					"src": "450:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 40,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "433:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 41,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "433:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 43,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "433:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 39,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "423:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "423:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "418:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 46,
															"nodeType": "ExpressionStatement",
															"src": "418:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 32,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "392:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3530",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "396:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"src": "392:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 48,
												"initializationExpression": {
													"assignments": [
														29
													],
													"declarations": [
														{
															"constant": false,
															"id": 29,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "385:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 48,
															"src": "377:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 28,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "377:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 31,
													"initialValue": {
														"hexValue": "30",
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "389:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "377:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "400:3:0",
														"subExpression": {
															"id": 35,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "400:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 37,
													"nodeType": "ExpressionStatement",
													"src": "400:3:0"
												},
												"nodeType": "ForStatement",
												"src": "373:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 51,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "488:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 49,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "480:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "480:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 18,
												"id": 53,
												"nodeType": "Return",
												"src": "473:18:0"
											}
										]
									},
									"functionSelector": "6fc21849",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "heavy50Loops",
									"nameLocation": "266:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "302:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:9:0"
									},
									"scope": 97,
									"src": "257:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "592:188:0",
										"statements": [
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "_x",
														"nameLocation": "610:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 95,
														"src": "602:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 60,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "602:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 65,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "642:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 63,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "625:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "625:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "625:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 62,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "615:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "615:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "602:43:0"
											},
											{
												"body": {
													"id": 88,
													"nodeType": "Block",
													"src": "686:60:0",
													"statements": [
														{
															"expression": {
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 79,
																	"name": "_x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "700:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 83,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4,
																					"src": "732:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 81,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "715:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 82,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "715:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "715:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 80,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "705:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "705:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "700:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 87,
															"nodeType": "ExpressionStatement",
															"src": "700:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 73,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "674:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3235",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "678:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_25_by_1",
															"typeString": "int_const 25"
														},
														"value": "25"
													},
													"src": "674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 89,
												"initializationExpression": {
													"assignments": [
														70
													],
													"declarations": [
														{
															"constant": false,
															"id": 70,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "667:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 89,
															"src": "659:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 69,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "659:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 72,
													"initialValue": {
														"hexValue": "30",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "671:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "659:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "682:3:0",
														"subExpression": {
															"id": 76,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "682:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 78,
													"nodeType": "ExpressionStatement",
													"src": "682:3:0"
												},
												"nodeType": "ForStatement",
												"src": "655:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "770:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 90,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "762:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "762:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 59,
												"id": 94,
												"nodeType": "Return",
												"src": "755:18:0"
											}
										]
									},
									"functionSelector": "a111fb4d",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "heavy25Loops",
									"nameLocation": "548:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "560:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "584:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:9:0"
									},
									"scope": 97,
									"src": "539:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 98,
							"src": "56:726:0",
							"usedErrors": []
						}
					],
					"src": "32:751:0"
				},
				"id": 0
			}
		}
	}
}